% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/doc_getFullData.r, R/prep_importData.r
\name{getFullData}
\alias{getFullData}
\alias{gfd}
\title{Get / Import Spectral Data}
\usage{
gfd(md = getmd(), filetype = "def", naString = "NA", slType = "def",
  multiplyRows = "def", stf = TRUE)

getFullData(md = getmd(), filetype = "def", naString = "NA",
  slType = "def", multiplyRows = "def", stf = TRUE)
}
\arguments{
\item{md}{List. The object with the metadat of the experiment.
The default is to get the metadata file via  \code{\link{getmd}}.}

\item{filetype}{Character. The type of the spectral raw data file.
Possile values are:
\itemize{
\item "def": Gets the default value from the setings.r file.
     (variable 'imp_specFileType')
\item "vision_NSAS.da": Import from the .da file generated by the Vision-software
from a Foss-XDS spectroscope.
\item "tabDelim.txt": Import any tab delimited text file that contains only
the NIR spectra and *no* additional columns like e.g. time, temperature etc.
\item "custom@yourFile.r": You can provide your own import-function for
importing spectra, with "yourFile.r" being the .r-file located in the path
specified in the .Renviron file. Please refer to \code{\link{custom_import}}
for further information.
}}

\item{naString}{Character. What to use as 'NA'. Applies only when 'filetype'
is 'tabDelim.txt'.}

\item{slType}{Character. The type of sample-list file in the sampleLists/
sl_in folder. Possible values are:
\itemize{
   \item "def" Gets the default value from the settings.r file.
         (variable 'imp_sampleListType')
   \item NULL By providing 'NULL' to the argument 'slType' you indicate that
         no sample-list should be imported to create the header. This would
         be the case if you use a custom-function to import your spectral
         data and all the necessary class- and numerical variables are already
         defined in the same file that holds the spectral data. Please refer to
         \code{\link{custom_import}} for furhter information on the requirements
         for this custom import function.
         You can use a custom function to import spectral data and at the same
         time import additional variables from a sample-list file by providing
         one of the characters listed below.
   \item "csv" a comma separated text file ending in '.csv'
   \item "txt" a tab delimited text file ending in '.txt'
   \item "xls" an Excel file ending in '.xlsx'
}}

\item{multiplyRows}{Character or Logical. If all the rows in the sample list
should be multiplied by the number of consecutive scans as specified in the
metadata of the experiment. If 'FALSE' (what would be the case if you, during
your measurements, had to divert from the planned number of consecutive scans
or had to make other changes so that the number of consecutive scans is not
the same for every sample) you have manually insert the column (default name
would be 'C_ConSNr' and provide the values for every row.}

\item{stf}{Logical, 'save to file'. If the final dataset should be saved to
the 'R-data' folder. Defaults to 'TRUE'.}
}
\value{
XXX
}
\description{
Loads an R-object containing previously imported spectral data,
 or imports spectral data from a file in the rawdata-folder and fuses
these data together with the class-header provided in the sampleLists/sl_in
folder.
}
\details{
From the metadata, provided in the first argument, the experiment
name is extracted, and the spectral file having the same name as the experiment
name (plus its specific ending) is imported from the rawdata-folder.
The sample list (what is used to create the header) must be in the
sampleLists/sl_in folder and must be named with the experiment name, followed
by a "-in" and then the file extension.
}
\section{Note}{
 This strict regime with the filenames seems maybe at first at
bit complicated, but it proved to be good practise to ensure and enforce a
strict and conscious handling of the files.
}
\examples{
\dontrun{
 md <- getmd()
 fd <- getFullData(md)
 fd <- getFullData() # the same as above
 fd <- getFullData(filetype="custom@myFunc.r", slType="xls")
 # This would use a custom function to read in the raw spectra, and read in
 # the header file from an Excel file.
}
}
\seealso{
\code{\link{readSpectra}}, \code{\link{readHeader}}
}

